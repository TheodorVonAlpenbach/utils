(defun map-string-region (from to beg end) (interactive "*r")
  (save-excursion
    (save-restriction
      (narrow-to-region beg end)
      (goto-char (point-min))
      (while (search-forward from nil t)
	(replace-match to t nil)))))
;;(map-string-region ",Ax(B" "oe" 1 10)

(defun map-strings-region (beg end map) (interactive "*r")
  (let ((case-fold-search nil))
    (dolist (curr map)
      (map-string-region (first curr) (second curr) beg end))))
;;(map-strings-region 1 10 *iso-latin1-encoding*)

(defun replace-iso-latin1-with-7bit-region (beg end) (interactive "*r")
  (map-strings-region beg end map-string-iso-latin1-to-7bit))

(defun replace-iso-latin1-with-7bit-region (beg end)
  (interactive "*r")
  (save-excursion
    (save-restriction
      (narrow-to-region beg end)
      (let ((table replace-iso-latin1-with-7bit-table))
        (while table
          (let ((current (car table)))
            (goto-char (point-min))
            (while (search-forward (car current) nil t)
              (replace-match (car (cdr current)) t nil)))
          (setq table (cdr table)))))))

(defun iso-latin1-2-7bit (iso-latin-string)
  (aif (assoc iso-latin-string *iso-latin1-encoding*)
    (second it)
    (error "Unknown ISO-LATIN-STRING %s." iso-latin-string)))
;;(iso-latin1-2-7bit "ar")

(defconst *iso-latin1-encoding*
  '((" " " " "%20" -1)
    ("\\[" "[" "%5B" -1)
    ("\\]" "]" "%5D" -1)
    ("'" "'" "%20" 39)
    ("+" "+" "%20" 192)
    (",A@(B" "A" "%C0" 192)
    (",AA(B" "A" "%C1" 193)
    (",AB(B" "A" "%C2" 194)
    (",AC(B" "A" "%C3" 195)
    (",AD(B" "Ae" "%C4" 196)
    (",AE(B" "Aa" "%C5" 197)
    (",AF(B" "Ae" "%C6" 198)
    (",AG(B" "C" "%C7" 199)
    (",AH(B" "E" "%C8" 200)
    (",AI(B" "E" "%C9" 201)
    (",AJ(B" "E" "%CA" 202)
    (",AK(B" "E" "%CB" 203)
    (",AL(B" "I" "%CC" 204)
    (",AM(B" "I" "%CD" 205)
    (",AN(B" "I" "%CE" 206)
    (",AO(B" "I" "%CF" 207)
    (",AP(B" "D" "%D0" 208)
    (",AQ(B" "N" "%D1" 209)
    (",AR(B" "O" "%D2" 210)
    (",AS(B" "O" "%D3" 211)
    (",AT(B" "O" "%D4" 212)
    (",AU(B" "O" "%D5" 213)
    (",AV(B" "Oe" "%D6" 214)
    (",AW(B" "x" "%D7" 215)
    (",AX(B" "Oe" "%D8" 216)
    (",AY(B" "U" "%D9" 217)
    (",AZ(B" "U" "%DA" 218)
    (",A[(B" "U" "%DB" 219)
    (",A\(B" "Ue" "%DC" 220)
    (",A](B" "Y" "%DD" 221)
    (",A^(B" "Th" "%DE" 222)
    (",A_(B" "ss" "%DF" 223)
    (",A`(B" "a" "%E0" 224)
    (",Aa(B" "a" "%E1" 225)
    (",Ab(B" "a" "%E2" 226)
    (",Ac(B" "a" "%E3" 227)
    (",Ad(B" "ae" "%E4" 228)
    (",Ae(B" "aa" "%E5" 229)
    (",Af(B" "ae" "%E6" 230)
    (",Ag(B" "c" "%E7" 231)
    (",Ah(B" "e" "%E8" 232)
    (",Ai(B" "e" "%E9" 233)
    (",Aj(B" "e" "%EA" 234)
    (",Ak(B" "e" "%EB" 235)
    (",Al(B" "i" "%EC" 236)
    (",Am(B" "i" "%ED" 237)
    (",An(B" "i" "%EE" 238)
    (",Ao(B" "i" "%EF" 239)
    (",Ap(B" "d" "%F0" 240)
    (",Aq(B" "n" "%F1" 241)
    (",Ar(B" "o" "%F2" 242)
    (",As(B" "o" "%F3" 243)
    (",At(B" "o" "%F4" 244)
    (",Au(B" "o" "%F5" 245)
    (",Av(B" "oe" "%F6" 246)
    (",Aw(B" "%" "%F7" 247)
    (",Ax(B" "oe" "%F8" 248)
    (",Ay(B" "u" "%F9" 249)
    (",Az(B" "u" "%FA" 250)
    (",A{(B" "u" "%FB" 251)
    (",A|(B" "ue" "%FC" 252)
    (",A}(B" "y" "%FD" 253)
    (",A~(B" "th" "%FE" 254)
    (",A(B" "y" "%FF" 255)))

(provide 'mb-locale)
