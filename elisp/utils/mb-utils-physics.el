(defconst +gravitational-constant+ 6.6740831E-11)
;;; some physics
(defconst +standard-gravitational-parameter-earth+ 3.9860044189E14)
(defconst +earth-mass+  5.9736E24)
(defconst +earth-radius-pole+ 6.356752E6)
(defconst +earth-radius-equator+ 6.378137E6)
(defconst +earth-radius-mean+ 6.371E6)
(defconst +moon-apogee+ 405.4E6)
;;(sqrt (/ (* 2 +gravitational-constant+ +earth-mass+) +earth-radius-pole+))
;;(sqrt (/ (* 2 +gravitational-constant+ +earth-mass+) +earth-radius-equator+))
;;(/ (* +gravitational-constant+ +earth-mass+) (sq +earth-radius-mean+))
;;(* +gravitational-constant+ +earth-mass+)

(defun escape-velocity2 (h m)
  (/ (* 2 +standard-gravitational-parameter-earth+) h))
;;(escape-velocity2 +earth-radius-mean+ +earth-mass+)

(cl-defun escape-velocity (&optional (h +earth-radius-mean+) (m +earth-mass+))
  (sqrt (escape-velocity2 h m)))
;;(escape-velocity)
;;(escape-velocity (+ +earth-radius-mean+ 10E3))
;;(escape-velocity (+ +earth-radius-mean+ 100E3))
;;(escape-velocity (+ +earth-radius-mean+ 1000E3))
;;(escape-velocity (+ +earth-radius-mean+ 2000E3))
;;(escape-velocity (+ +earth-radius-mean+ 9000E3))
;;(escape-velocity (+ +earth-radius-equator+ 9000E3))
;;(escape-velocity (+ (2* +earth-radius-mean+)))
;;(escape-velocity +moon-apogee+)
;;(escape-velocity (* 10 +moon-apogee+))
;;(escape-velocity (* 100 +moon-apogee+))
;;(escape-velocity (* 1000 +moon-apogee+))
;;(escape-velocity (* 10000 +moon-apogee+))
;;(escape-velocity (* 20000 +moon-apogee+))

(provide 'mb-utils-physics)
