;;(set-frame-font "--Courier New-normal-normal-normal-mono-13-*-*-*-c-*-iso8859-1")
;;(set-frame-size (selected-frame) 120 61)
;;(set-frame-position (selected-frame) 0 0)

(setf display-time-format "%H:%M %d/%m")

;; Local elisp load paths
;;(setf *local-load-paths* '("~/git/lsconf"))

(cl-pushnew
 '(".emacs" ".emacs-local-DESKTOP-ACLLNOR-cygwin")
  *simple-swaps* :test #'equal)

(cl-pushnew
 '("problem-db.asd" "problem-db.lisp")
  *simple-swaps* :test #'equal)

(cl-pushnew
 '("problem-server.asd" "problem-server.lisp")
  *simple-swaps* :test #'equal)

;; Sentences, see info node Sentences
(setf sentence-end "[.?!][]\"')]*\\($\\|\t\\| \\)[ \t\n]*")
(setf sentence-end-double-space nil)

;; news
(setf gnus-select-method '(nntp "news.online.no"))
(setf user-full-name "Mats Bergstrøm")

;; tags
(setf tags-table-list
      (cl-nunion
       '("~/.MBTAGS"
	 ;; "~/.CTAGS"
	 ;; "~/.OTAGS"
	 "~/.CLTAGS"
	 ;; "~/.PYTAGS"
	 ;; "~/.SCILABTAGS"
	 )
       tags-table-list :test #'string=))

;; lynx
(setf *lynx-proxy-dir* (expand-file-name "lynx-proxy" *local-data-dir*))
(setf *lynx-auth* "")

;; diary file (mandatory to use #'calendar)
(setf diary-file (setf diary-file (expand-file-name "office/diary" *local-data-dir*)))

(defconst lsdoc-dir "/ssh:ssh:~/doc"
  "Mounted silver doc directory")

(defconst pf-dir "/ssh:pf:~/"
  "Mounted progfab root directory")

(defconst pfdoc-dir "/ssh:pf:~/doc"
  "progfab's doc directory")

(defconst pfps-dir "/ssh:pf:~/git/problem-server"
  "progfab's doc directory")

(let ((fn "~/.emacs.d/tramp"))
  (when (file-exists-p fn)
    (delete-file fn)))

(autoload 'LilyPond-mode "lilypond-mode" "Major mode for editing BNF definitions." t)

;;(find-file "/ssh:ssh:~/doc/LS-notes.org")
(setf *my-favorites*
      `((,+mb-lisp-dir+ ".emacs")
	(,+mb-lisp-dir+ "utils/mb-utils-strings.el")
	(,+mb-lisp-dir+ "global/mb-indent.el")
	(,+mb-lisp-dir+ "mode-extensions/mb-evil.el")
	(,+mb-lisp-dir+ "mode-extensions/mb-evil-map.el")
	;; (,+mb-lisp-dir+ "mode-extensions/mb-lisp.el")
	;; (,+mb-lisp-dir+ "quiz/quiz-park.el")
	(,+mb-lisp-dir+ "div/scratch.el")
	(,+mb-lisp-dir+ "games/cram/cram.el")

	;; Common Lisp utils
	(,+home-dir+ "projects/quiz/ferskvare" :point :end :keyboard :no :read-only :none)
	(,+home-dir+ "data/small-arbeidslog.org" :point :end :keyboard :no
		     :time-paragraphs t)

	;; ;; remote files (shared with windows)
	(,pf-dir "progfab/log.org")

	;; Note special treatment of arbeidslog in mb-insert-state-init!
	;; (,pfdoc-dir "arbeidslog" :point :end :keyboard :no :time-paragraphs t)
	;; (,pfdoc-dir "adresser.txt" :keyboard :no)
	;; (,pfdoc-dir "howto.org")

	;; ;; Problem Server files
	;; (,pfps-dir "problem-server.lisp")
	;; (,pfps-dir "problem-server.asd")
	;; (,pfps-dir "problem-server-dispatch.lisp")
	;; (,pfps-dir "problem-db-ui.lisp")

	;; (,pf-dir "git/tuning/tuning.lisp")
	;; (,pf-dir "git/tuning/js/tuning.js")
	))
;;(find-file "/ssh:pf:~/init.lisp")
;;(find-file "/ssh:ssh:~/doc/arbeidslog")

;;scheme
(setf scheme-program-name "guile")

;; lisp
(setf inferior-lisp-program "clisp")
